networks:
  sermas_dev:
    name: sermas_dev

services:

  proxy:
    image: caddy:2
    volumes:
      - ./config/proxy:/etc/caddy
    networks:
      - sermas_dev
    ports:
      - 8080:8080

  api:
    image: ghcr.io/sermas-eu/api:dev
    depends_on:
      proxy:
        condition: service_started
      mqtt:
        condition: service_started
      mongodb:
        condition: service_started
      chromadb:
        condition: service_started
      redis:
        condition: service_started
      keycloak:
        condition: service_healthy
    networks:
      - sermas_dev
    environment:
      - ENV_PATH=/config/.env
      - CONFIG_BASEPATH=/config
    volumes:
      - ./config/api:/config

  kiosk:
    image: ghcr.io/sermas-eu/kiosk:dev
    depends_on:
      - api
    networks:
      - sermas_dev

  cli:
    image: ghcr.io/sermas-eu/cli:dev
    networks:
      - sermas_dev
    environment:
      - CONFIG_DIR=/data
    volumes:
      - ./data/cli:/data
      - ./apps:/apps

  speechbrain:
    image: ghcr.io/sermas-eu/speechbrain:dev
    networks:
      - sermas_dev
    volumes:
      - ./data/speechbrain/models:/app/speechbrain_models
      - ./data/speechbrain/cache/torch:/root/.cache/torch
      - ./data/speechbrain/cache/huggingface:/root/.cache/huggingface
      - ./data/speechbrain/data/torch:/data
      - ./config/speechbrain:/app/config

  mqtt:
    image: iegomez/mosquitto-go-auth:latest
    networks:
      - sermas_dev
    volumes:
      - ./config/mqtt:/etc/mosquitto
    depends_on:
      - keycloak

  keycloak:
    command: start-dev
    image: quay.io/keycloak/keycloak:24.0.4
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KEYCLOAK_HOSTNAME=localhost
      - KEYCLOAK_HTTP_PORT=8080
      - KC_HOSTNAME_STRICT=false
      - KC_PROXY=edge
      - KC_HTTP_RELATIVE_PATH=/keycloak
      - KC_HOSTNAME_STRICT_HTTPS=false
      - KC_HOSTNAME_STRICT=false
      - KC_HOSTNAME_STRICT_BACKCHANNEL=true
      - KC_HEALTH_ENABLED=true
    networks:
      - sermas_dev
    volumes:
      - keycloak:/opt/keycloak/data
    healthcheck:
      test: [ "CMD-SHELL", 'exec 3<>/dev/tcp/localhost/8080; echo -e "GET /keycloak/health HTTP/1.1\nhost: localhost:8080\n" >&3; timeout --preserve-status 1 cat <&3 | grep -m 1 status | grep -m 1 UP; ERROR=$?; exec 3<&-; exec 3>&-; exit $$ERROR' ]
      interval: 10s
      timeout: 5s
      retries: 5

  mongodb:
    image: mongo
    networks:
      - sermas_dev
    volumes:
      - mongodb:/data/db

  chromadb:
    image: ghcr.io/chroma-core/chroma:latest
    volumes:
      - ./data/chroma:/chroma/chroma
    networks:
      - sermas_dev

  redis:
    image: redis:alpine
    volumes:
      - ./data/redis:/data
    networks:
      - sermas_dev

  minio:
    image: quay.io/minio/minio:RELEASE.2024-03-21T23-13-43Z
    command: server --address "0.0.0.0:9000" --console-address "0.0.0.0:9001" /data1 /data2
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
      MINIO_BROWSER_REDIRECT_URL: http://localhost:8080/minio-admin
    networks:
      - sermas_dev
    healthcheck:
      test: [ "CMD", "mc", "ready", "local" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - ./data/minio/data1:/data1
      - ./data/minio/data2:/data2
    ports:
      - 9000:9000

volumes:
  mongodb:
  keycloak:
